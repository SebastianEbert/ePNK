package org.pnml.tools.epnk.tutorials.app.simulator.application;

// [...]

public class EnabledTransitionHandler implements IActionHandler {

	private TechnicalSimulator application;

	public EnabledTransitionHandler(TechnicalSimulator application) {
		super();
		this.application = application;	
	}
	
	@Override
	public boolean mousePressed(MouseEvent arg0,
			ObjectAnnotation annotation) {
		return false; 
	}

	@Override
	public boolean mouseReleased(MouseEvent arg0,
			ObjectAnnotation annotation) {
		return false;
	}

	@Override
	public boolean mouseDoubleClicked(MouseEvent arg0,
			ObjectAnnotation annotation) {
		NetAnnotations netAnnotations = application.getNetAnnotations();
		NetAnnotation current = netAnnotations.getCurrent();
		if (current.getObjectAnnotations().contains(annotation)) {
			Object object = annotation.getObject();
			if (object instanceof TransitionNode) {
				object = NetFunctions.resolve((TransitionNode) object);
			}
			if (object instanceof Transition &&
					annotation instanceof EnabledTransition) {
				Transition transition = (Transition) object;
				EnabledTransition enabledTransition =
					(EnabledTransition) annotation;
				if (enabledTransition.isEnabled()) {
					Collection<Arc> inactiveInArcs = new HashSet<Arc>();
					for (InvolvedArc a: enabledTransition.getIn()) {
						Object o = a.getObject();
						if (o instanceof Arc && !a.isActive()) {
							inactiveInArcs.add((Arc) o);
					}	}
					Collection<Arc> inactiveOutArcs = new HashSet<Arc>();
					for (InvolvedArc a: enabledTransition.getOut()) {
						Object o = a.getObject();
						if (o instanceof Arc && !a.isActive()) {
							inactiveOutArcs.add((Arc) o);
					}	}
					return application.fireTransition(transition,
							inactiveInArcs,
							inactiveOutArcs);
		}	}	}
		return false;
	}

}
